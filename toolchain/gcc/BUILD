CFLAGS = "-O2 -march=core2 -mtune=skylake"

genrule(
    name = "build",
    srcs = [
        # TODO: Very likely local_config_cc cc_wrapper is called differently in
        # other environments than macOS.
        "@local_config_cc//:cc_wrapper",
        "@gmp//:top",
        "@mpfr//:top",
        "@mpc//:top",
        "@isl//:top",
        "@binutils//:top",
        "@gcc//:top",
        ":patches",
    ],
    outs = [
        "gcc-toolchain.tar.gz",
        "gcc-toolchain.tar.gz.sha256",
    ],
    cmd = ' '.join([
        'export PATH="/usr/bin:/bin";',
        'root="$$PWD"; set -x;',
        'sysroot="$$TMPDIR/sysroot";',
        'ncpus=$$(python -c "import multiprocessing as mp; print(mp.cpu_count())");',
        'export CFLAGS="%s";' % CFLAGS,
        'export CC=$(CC);',
        'export CXX="$$(echo $(CC) | sed -e "s,cc_wrapper,cxx_wrapper," -e "s,gcc,g++," -e "s,clang,clang++,")";',
        'export AR=$(AR);',
        'export NM=$(NM);',
        'export STRIP=$(STRIP);',
        '[ "$$CC"    = "$${CC#/}"    ] && export CC=$$root/$$CC;',
        '[ "$$CXX"   = "$${CXX#/}"   ] && export CXX=$$root/$$CXX;',
        '[ "$$AR"    = "$${AR#/}"    ] && export AR=$$root/$$AR;',
        '[ "$$NM"    = "$${NM#/}"    ] && export NM=$$root/$$NM;',
        '[ "$$STRIP" = "$${STRIP#/}" ] && export STRIP=$$root/$$STRIP;',

        'relpath() {',
        '''python -c 'import os, sys; print(os.path.relpath(*sys.argv[1:]))' "$$1" "$${2:-.}";''',
        # '''perl -e 'use File::Spec; print File::Spec->abs2rel(@ARGV) . "\n"' "$$1" "$${2:-.}";''',
        '};',
        'workaround_changed_cc_path() {',
        '  find . -name config.cache -type f -delete;',
        '};',

        'cxx_wrapper="$$(echo $(location @local_config_cc//:cc_wrapper) | sed s,cc_wrapper,cxx_wrapper,)";',
        'if [ ! -x "$$cxx_wrapper" ]; then',
        '  cp $(location @local_config_cc//:cc_wrapper) "$$cxx_wrapper";',
        '  sed -i "" -e "s,/usr/bin/gcc,/usr/bin/g++," -e "s,/usr/bin/clang,/usr/bin/clang++," "$$cxx_wrapper";',
        'fi;',
        'mkdir $$sysroot;',

        # '( cd $(location @gmp//:top);',
        # '  make distclean || /usr/bin/true;',
        # '  ./configure', '--prefix=$$sysroot',
        #                  '--disable-static',
        #                  '--enable-cxx',
        #                  ';',
        # '  make -j $$ncpus;',
        # '  make -j $$ncpus check;',
        # '  make install;',
        # '  make distclean;',
        # '  ./configure', '--prefix=$$sysroot',
        #                  '--disable-assembly',
        #                  '--disable-shared',
        #                  '--enable-cxx',
        #                  ';',
        # '  make -j $$ncpus;',
        # '  install .libs/*.a $$sysroot/lib;',
        # ');',
        # '( cd $(location @mpfr//:top);',
        # '  workaround_changed_cc_path;',
        # '  ./configure', '--prefix=$$sysroot',
        #                  '--with-gmp=$$sysroot',
        #                  '--disable-dependency-tracking',
        #                  '--disable-silent-rules',
        #                  ';',
        # '  make -j $$ncpus;',
        # '  make -j $$ncpus check;',
        # '  make install;',
        # ');',
        # '( cd $(location @mpc//:top);',
        # '  workaround_changed_cc_path;',
        # '  ./configure', '--prefix=$$sysroot',
        #                  '--with-gmp=$$sysroot',
        #                  '--with-mpfr=$$sysroot',
        #                  '--disable-dependency-tracking',
        #                  '--disable-silent-rules',
        #                  ';',
        # '  make -j $$ncpus;',
        # '  make -j $$ncpus check;',
        # '  make install;',
        # ');',
        # '( cd $(location @isl//:top);',
        # '  workaround_changed_cc_path;',
        # '  ./configure', '--prefix=$$sysroot',
        #                  '--with-gmp=$$sysroot',
        #                  '--disable-dependency-tracking',
        #                  '--disable-silent-rules',
        #                  ';',
        # '  make -j $$ncpus;',
        # '  make -j $$ncpus check;',
        # '  make install;',
        # ');',
        # '( cd $(location @binutils//:top);',
        # '  backpath="$$(relpath $$root)";',
        # # '  ln -sf $$backpath/$(location @gmp//:top) gmp;',
        # # '  ln -sf $$backpath/$(location @mpfr//:top) mpfr;',
        # # '  ln -sf $$backpath/$(location @mpc//:top) mpc;',
        # # '  ln -sf $$backpath/$(location @isl//:top) isl;',
        # '  workaround_changed_cc_path;',
        # '  mkdir -p _/b;',
        # '  cd _/b;',
        # '  ../../configure', '--prefix=$$sysroot',
        #                      '--disable-debug',
        #                      '--disable-dependency-tracking',
        #                      '--disable-nls',
        #                      '--enable-deterministic-archives',
        #                      '--enable-interwork',
        #                      '--enable-multilib',
        #                      '--enable-64-bit-bfd',
        #                      '--enable-targets=all',
        #                      '--with-gmp=$$sysroot',
        #                      '--with-mpfr=$$sysroot',
        #                      '--with-mpc=$$sysroot',
        #                      '--with-isl=$$sysroot',
        #                      ';',
        # '  make -j $$ncpus;',
        # '  make install;',
        # ');',
        # # Switch to the just built binutils prior building GCC.
        # # 'export PATH="$$sysroot/bin:$$PATH";',
        # '[ -x $$sysroot/bin/ar ] && export AR=$$sysroot/bin/ar;',
        # '[ -x $$sysroot/bin/as ] && export AS=$$sysroot/bin/as;',
        # '[ -x $$sysroot/bin/dlltool ] && export DLLTOOL=$$sysroot/bin/dlltool;',
        # '[ -x $$sysroot/bin/ld ] && export LD=$$sysroot/bin/ld;',
        # '[ -x $$sysroot/bin/nm ] && export NM=$$sysroot/bin/nm;',
        # '[ -x $$sysroot/bin/ranlib ] && export RANLIB=$$sysroot/bin/ranlib;',
        # '[ -x $$sysroot/bin/strip ] && export STRIP=$$sysroot/bin/strip;',
        # '[ -x $$sysroot/bin/windres ] && export WINDRES=$$sysroot/bin/windres;',
        # '[ -x $$sysroot/bin/windmc ] && export WINDMC=$$sysroot/bin/windmc;',
        # '[ -x $$sysroot/bin/objcopy ] && export OBJCOPY=$$sysroot/bin/objcopy;',
        # '[ -x $$sysroot/bin/objdump ] && export OBJDUMP=$$sysroot/bin/objdump;',
        # '[ -x $$sysroot/bin/readelf ] && export READELF=$$sysroot/bin/readelf;',
        '( cd $(location @gcc//:top);',
        '  backpath="$$(relpath $$root)";',
        '  workaround_changed_cc_path;',
        '  for fname in $(locations :patches); do',
        '    ls -l $$root/$$fname $$backpath/$$fname;',
        '    if ! patch -p1 -fRs --dry-run < $$backpath/$$fname; then',
        '      patch -p1 -f < $$backpath/$$fname >&2;',
        '    fi;',
        '  done;',
        '  ln -sf $$backpath/$(location @gmp//:top) gmp;',
        '  ln -sf $$backpath/$(location @mpfr//:top) mpfr;',
        '  ln -sf $$backpath/$(location @mpc//:top) mpc;',
        '  ln -sf $$backpath/$(location @isl//:top) isl;',
        # # Use libiberty from binutils. Otherwise the compilation will fail.
        # '  rm -rf libiberty;',
        '  for fname in $$backpath/$(location @binutils//:top)/*; do',
        '    [ ! -e $$(basename $$fname) ] && ln -sfv $$fname;',
        '  done;',
        # 'ln -sf $$backpath/$(location @binutils//:top)/libiberty;',
        # '  find -L . -name configure -exec',
        # '''  sed -i '' -e '/depcc="\$$CXX"/,/CXXDEPMODE/ s@conftest\.c@conftest\.cpp@g' {} \; ;''',
        # Hack the cc_wrapper to get it call g++ instead of gcc
        # if C++ mode is enable with -std=c++.
        '  mkdir -p _/b;',
        '  cd _/b;',
        '  ../../configure', '--prefix=$$sysroot',
                             '--disable-multilib',
                             # '--enable-multilib',
                             '--disable-nls',
                             '--enable-lto',
                             '--enable-languages=c,c++',
                             # '--enable-checking=release',
                             # '--with-gmp=$$sysroot',
                             # '--with-mpfr=$$sysroot',
                             # '--with-mpc=$$sysroot',
                             # '--with-isl=$$sysroot',
                             # '--with-sysroot=$$sysroot',
                             '--with-bugurl=https://github.com/deni64k/the/issues',
                             ';',
        '  make -j $$ncpus all-gcc;',
        '  make install-gcc;',
        ');',
        'tar zcvf $(location gcc-toolchain.tar.gz) -C $$sysroot .;',
        'shasum -a 256 $(location gcc-toolchain.tar.gz) > $(location gcc-toolchain.tar.gz.sha256);',
    ]),
    # heuristic_label_expansion = False,
    # tags = ["manual"],
    # tools = ["gcc-configure.diff"],
    visibility = ["//visibility:private"],
)

# filegroup(
#     name = "top",
#     srcs = [
#         ".",
#     ],
#     visibility = ["//visibility:public"],
# )

filegroup(
    name = "patches",
    srcs = glob(["*.patch"]),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "toolchain",
    srcs = [
        ":build",
    ],
    visibility = ["//visibility:public"],
)
